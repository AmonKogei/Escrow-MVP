{"file":"C:\\Users\\USER\\Downloads\\Escrow MVP\\src\\lib\\prisma.ts","mappings":";;;AAAA,oBAAoB;AACpB,2CAA8C;AAE9C,MAAM,eAAe,GAAG,MAA6C,CAAC;AAEtE,4GAA4G;AAC/F,QAAA,MAAM,GACjB,eAAe,CAAC,MAAM;IACtB,IAAI,qBAAY,CAAC;QACf,GAAG,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,qCAAqC;KAC/E,CAAC,CAAC;AAEL,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;IAAE,eAAe,CAAC,MAAM,GAAG,cAAM,CAAC;AAE3E,kBAAe,cAAM,CAAC","names":[],"sources":["C:\\Users\\USER\\Downloads\\Escrow MVP\\src\\lib\\prisma.ts"],"sourcesContent":["// src/lib/prisma.ts\r\nimport { PrismaClient } from '@prisma/client';\r\n\r\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\r\n\r\n// Use a global variable to prevent instantiating too many PrismaClients in development (Next.js hot reload)\r\nexport const prisma =\r\n  globalForPrisma.prisma ||\r\n  new PrismaClient({\r\n    log: ['query', 'info', 'warn', 'error'], // Log database queries for debugging\r\n  });\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\r\n\r\nexport default prisma;"],"version":3}