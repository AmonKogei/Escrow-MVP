{"file":"C:\\Users\\USER\\Downloads\\Escrow MVP\\src\\lib\\session.ts","mappings":"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","names":[],"sources":["C:\\Users\\USER\\Downloads\\Escrow MVP\\src\\lib\\session.ts"],"sourcesContent":["// src/lib/session.ts\r\n// Small, runtime-compatible helpers to sign and verify a session cookie.\r\n// This module intentionally does not import Prisma or other server-only libs so it\r\n// can be used from middleware (Edge) and server routes.\r\n\r\nconst toHex = (buf: Uint8Array) => Array.from(buf).map(b => b.toString(16).padStart(2, '0')).join('');\r\n\r\nasync function hmacSha256Hex(message: string, secret: string) {\r\n  // Try Node's crypto first\r\n  try {\r\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n    const { createHmac } = require('crypto');\r\n    return createHmac('sha256', secret).update(message).digest('hex');\r\n  } catch (e) {\r\n    // Fallback to Web Crypto (Edge runtime)\r\n    const enc = new TextEncoder();\r\n    const key = await (globalThis as any).crypto.subtle.importKey(\r\n      'raw',\r\n      enc.encode(secret),\r\n      { name: 'HMAC', hash: 'SHA-256' },\r\n      false,\r\n      ['sign']\r\n    );\r\n    const sig = await (globalThis as any).crypto.subtle.sign('HMAC', key, enc.encode(message));\r\n    return toHex(new Uint8Array(sig));\r\n  }\r\n}\r\n\r\nexport async function signSession(payload: object, secret: string) {\r\n  if (!secret) {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      throw new Error('SESSION_SECRET must be set in production');\r\n    }\r\n    console.warn('SESSION_SECRET not provided; using insecure fallback. Set SESSION_SECRET in env for production.');\r\n    secret = 'dev-secret';\r\n  }\r\n  const str = JSON.stringify(payload);\r\n  const encoded = encodeURIComponent(str);\r\n  const sig = await hmacSha256Hex(encoded, secret);\r\n  return `${encoded}.${sig}`;\r\n}\r\n\r\nexport async function verifySession(cookieValue: string, secret: string) {\r\n  if (!cookieValue) return null;\r\n  if (!secret) {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      // Fail to verify in production without a secret\r\n      return null;\r\n    }\r\n    // Insecure fallback for development/tests\r\n    secret = 'dev-secret';\r\n  }\r\n  const parts = cookieValue.split('.');\r\n  if (parts.length !== 2) return null;\r\n  const [encoded, sig] = parts;\r\n  const expected = await hmacSha256Hex(encoded, secret);\r\n  // Timing-safe compare\r\n  try {\r\n    // Node crypto timingSafeEqual\r\n    // Convert hex strings to buffers\r\n    const bufExpected = Buffer.from(expected, 'hex');\r\n    const bufSig = Buffer.from(sig, 'hex');\r\n    if (bufExpected.length !== bufSig.length) return null;\r\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n    const { timingSafeEqual } = require('crypto');\r\n    if (!timingSafeEqual(bufExpected, bufSig)) {\r\n      console.debug(`verifySession: timingSafeEqual failed expected=${expected.slice(0,8)} got=${sig.slice(0,8)} secretPresent=${!!process.env.SESSION_SECRET}`);\r\n      return null;\r\n    }\r\n  } catch (e) {\r\n    // Fallback: constant-time string compare\r\n    let mismatch = 0;\r\n    if (expected.length !== sig.length) {\r\n      console.debug(`verifySession: length mismatch expected=${expected.length} got=${sig.length} secretPresent=${!!process.env.SESSION_SECRET}`);\r\n      return null;\r\n    }\r\n    for (let i = 0; i < expected.length; i++) {\r\n      mismatch |= expected.charCodeAt(i) ^ sig.charCodeAt(i);\r\n    }\r\n    if (mismatch !== 0) {\r\n      console.debug(`verifySession: fallback mismatch expected=${expected.slice(0,8)} got=${sig.slice(0,8)} secretPresent=${!!process.env.SESSION_SECRET}`);\r\n      return null;\r\n    }\r\n  }\r\n  // debug: verification succeeded\r\n  // console.debug(`verifySession: ok expected=${expected.slice(0,8)} got=${sig.slice(0,8)}`);\r\n  try {\r\n    const parsed = JSON.parse(decodeURIComponent(encoded));\r\n    return parsed;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n"],"version":3}